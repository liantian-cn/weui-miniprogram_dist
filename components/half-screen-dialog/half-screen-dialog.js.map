{"version":3,"file":"components\\half-screen-dialog\\half-screen-dialog.js","sources":["webpack:///./src/components/half-screen-dialog/half-screen-dialog.ts?4719","webpack:///./src/components/half-screen-dialog/half-screen-dialog.ts"],"sourcesContent":["module.exports = require(\"!./half-screen-dialog.ts\")","Component({\r\n    options: {\r\n        multipleSlots: true, // 在组件定义时的选项中启用多slot支持\r\n        addGlobalClass: true\r\n    },\r\n    properties: {\r\n        closabled: {\r\n            // 是否具有关闭标签\r\n            type: Boolean,\r\n            value: true\r\n        },\r\n        title: {\r\n            // 标题，也可以通过 slot 自定义\r\n            type: String,\r\n            value: ''\r\n        },\r\n        subTitle: {\r\n            // 副标题，也可以通过 slot 自定义\r\n            type: String,\r\n            value: ''\r\n        },\r\n        extClass: {\r\n            // 弹窗 class\r\n            type: String,\r\n            value: ''\r\n        },\r\n        desc: {\r\n            type: String,\r\n            value: ''\r\n        },\r\n        tips: {\r\n            type: String,\r\n            value: ''\r\n        },\r\n        maskClosable: {\r\n            type: Boolean,\r\n            value: true\r\n        },\r\n        mask: {\r\n            // 是否需要 遮罩层\r\n            type: Boolean,\r\n            value: true\r\n        },\r\n        show: {\r\n            // 是否开启弹窗\r\n            type: Boolean,\r\n            value: false,\r\n            observer: '_showChange'\r\n        },\r\n        buttons: {\r\n            type: Array,\r\n            value: [] // {text, extClass}\r\n        }\r\n    },\r\n    data: {\r\n        wrapperShow: false,\r\n        innerShow: false\r\n    },\r\n    lifetimes: {\r\n        ready() {\r\n            this._showChange(this.data.show)\r\n        }\r\n    },\r\n    methods: {\r\n        _showChange(show) {\r\n            if (show) {\r\n                this.setData({\r\n                    wrapperShow: true,\r\n                    innerShow: true\r\n                })\r\n            } else {\r\n                this.setData({ innerShow: false })\r\n                setTimeout(() => {\r\n                    this.setData({ wrapperShow: false })\r\n                }, 300)\r\n            }\r\n        },\r\n        close(e) {\r\n            const { type } = e.currentTarget.dataset\r\n            if (this.data.maskClosable || type === 'close') {\r\n                this.setData({\r\n                    show: false\r\n                })\r\n                // 关闭弹窗回调事件\r\n                this.triggerEvent('close')\r\n            }\r\n        },\r\n        buttonTap(e) {\r\n            const { index } = e.currentTarget.dataset\r\n            this.triggerEvent('buttontap', { index, item: this.data.buttons[index] }, {})\r\n        },\r\n        onMaskMouseMove() {\r\n            // do nothing\r\n        }\r\n    }\r\n})\r\n"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AA5CA;AAiDA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AA9BA;AA/DA;;;;;;;;","sourceRoot":""}