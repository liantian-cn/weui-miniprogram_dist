{"version":3,"file":"components\\checkbox-group\\checkbox-group.js","sources":["webpack:///./src/components/checkbox-group/checkbox-group.ts?5018","webpack:///./src/components/checkbox-group/checkbox-group.ts"],"sourcesContent":["module.exports = require(\"!./checkbox-group.ts\")","Component({\r\n    options: {\r\n        addGlobalClass: true,\r\n        multipleSlots: true\r\n    },\r\n    properties: {\r\n        multi: {\r\n            type: Boolean,\r\n            value: true,\r\n            observer: '_multiChange'\r\n        },\r\n        extClass: {\r\n            type: String,\r\n            value: ''\r\n        },\r\n        prop: {\r\n            type: String,\r\n            value: ''\r\n        }\r\n    },\r\n    data: {\r\n        targetList: [],\r\n        parentCell: null\r\n    },\r\n    relations: {\r\n        '../checkbox/checkbox': {\r\n            type: 'descendant',\r\n            linked(target) {\r\n                this.data.targetList.push(target)\r\n                target.setMulti(this.data.multi)\r\n\r\n                if (!this.data.firstItem) {\r\n                    this.data.firstItem = target\r\n                }\r\n                if (target !== this.data.firstItem) {\r\n                    target.setOuterClass('weui-cell_wxss')\r\n                }\r\n            },\r\n            unlinked(target) {\r\n                let index = -1\r\n                this.data.targetList.forEach((item, idx) => {\r\n                    if (item === target) {\r\n                        index = idx\r\n                    }\r\n                })\r\n                this.data.targetList.splice(index, 1)\r\n                if (!this.data.targetList) {\r\n                    this.data.firstItem = null\r\n                }\r\n            }\r\n        },\r\n        '../form/form': {\r\n            type: 'ancestor'\r\n        },\r\n        '../cells/cells': {\r\n            type: 'ancestor',\r\n            linked(target) {\r\n                if (!this.data.parentCell) {\r\n                    this.data.parentCell = target\r\n                }\r\n                this.setParentCellsClass()\r\n            },\r\n            unlinked() {\r\n                this.data.parentCell = null // 方便内存回收\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        checkedChange(checked, target) {\r\n            if (this.data.multi) {\r\n                const vals = []\r\n                this.data.targetList.forEach((item) => {\r\n                    if (item.data.checked) {\r\n                        vals.push(item.data.value)\r\n                    }\r\n                })\r\n                this.triggerEvent('change', { value: vals })\r\n            } else {\r\n                let val = ''\r\n                this.data.targetList.forEach((item) => {\r\n                    if (item === target) {\r\n                        val = item.data.value\r\n                    } else {\r\n                        item.setData({\r\n                            checked: false\r\n                        })\r\n                    }\r\n                })\r\n                this.triggerEvent('change', { value: val }, {})\r\n            }\r\n        },\r\n        setParentCellsClass() {\r\n            const className = this.data.multi ? 'weui-cells_checkbox' : 'weui-cells_radio'\r\n            if (this.data.parentCell) {\r\n                this.data.parentCell.setCellsClass(className)\r\n            }\r\n        },\r\n        _multiChange(multi) {\r\n            this.data.targetList.forEach((target) => {\r\n                target.setMulti(multi)\r\n            })\r\n            if (this.data.parentCell) {\r\n                this.data.parentCell.setCellMulti(multi)\r\n            }\r\n            return multi\r\n        }\r\n    }\r\n})\r\n"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAVA;AAeA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAxBA;AA0BA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAVA;AA9BA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAtCA;AAnEA;;;;;;;;","sourceRoot":""}